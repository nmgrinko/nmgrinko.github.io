{"version":3,"sources":["components/AppHeader/index.js","components/AppHeader/AppHeader.js","components/DragAndDrop/index.js","components/DragAndDrop/DragAndDrop.js","components/TodoListItem/index.js","components/TodoListItem/TodoListItem.js","components/TodoList/index.js","components/TodoList/TodoList.js","components/SearchPanel/index.js","components/SearchPanel/SearchPanel.js","components/ItemStatusFilter/ItemStatusFilter.js","components/ItemStatusFilter/index.js","components/ItemAddForm/index.js","components/ItemAddForm/ItemAddForm.js","components/Loading/index.js","components/Loading/Loading.js","components/App/App.js","store/actions/index.js","components/App/index.js","reportWebVitals.js","utils/API.js","store/sagas/index.js","store/reducers/index.js","store/index.js","index.js"],"names":["AppHeader","toDo","done","className","DragAndDrop","classNamelabel","idListGroup","onDragAndDrop","children","classNameListGroupItems","split","draggable","onDragStart","evt","target","querySelector","classList","add","onDragEnd","remove","onDragOver","preventDefault","activeElement","closest","currentElement","contains","nextElement","cursorPosition","currentElementCoord","getBoundingClientRect","y","height","nextElementSibling","getNextElement","clientY","previousElementSibling","id","TodoListItem","label","onToggleImportant","onToggleDone","onDelete","onEditItemLabel","type","onClick","TodoList","items","elements","map","item","important","itemProps","SearchPanel","onSearchChange","useState","term","state","setState","placeholder","value","onChange","e","filterButtons","name","ItemStatusFilter","filter","onFilterChange","buttons","classNames","ItemAddForm","stateForm","onItemAdded","onSaveItemLabel","edit","stateValue","setStateValue","flag","onSubmit","length","Loading","connect","loading","timeRender","mapDispatchToProps","GET_TODO","PUT_TODO","SET_ITEM","RECEIV_FILTER","RECEIV_SEARCH","search","App","props","get","setGet","initialAddToSave","setStateForm","toggleProperty","arr","propName","idx","findIndex","slice","result","createItem","Date","now","doneCount","toDoCount","visibleItems","toLowerCase","indexOf","searchItems","filterItems","useEffect","time","server","find","idActiveItem","idNextItem","newItems","indexActiveItem","indexNextItem","ActiveItem","NextItem","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","axios","create","baseURL","responseType","fetchTodoGet","actionWatcherGet","fetchTodoPut","actionWatcherPut","rootSaga","API","response","data","put","takeLatest","console","log","all","initialState","reducer","action","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf91676f.chunk.js","sourcesContent":["import AppHeader from './AppHeader';\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\nimport './AppHeader.css';\r\n\r\nconst AppHeader = ({ toDo, done }) => {\r\n\r\n    return (\r\n        <div className = \"app-header d-flex\">\r\n            <h1> ToDo List </h1>\r\n            <h2> { toDo } more to do, { done } done </h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;\r\n","import DragAndDrop from './DragAndDrop';\r\n\r\nexport default DragAndDrop;\r\n","const DragAndDrop = ({ classNamelabel, idListGroup, onDragAndDrop, children }) => {\r\n\r\n    const classNameListGroupItems = classNamelabel.split(' ')[0];\r\n\r\n    const onDragStart = (evt) => {\r\n        const li = evt.target.querySelector(`.${classNameListGroupItems}`);\r\n        li.classList.add('selected');\r\n    };\r\n\r\n    const onDragEnd = (evt) => {\r\n        const li = evt.target.querySelector(`.${classNameListGroupItems}`);\r\n        li.classList.remove('selected');  \r\n    };\r\n\r\n    const getNextElement = (cursorPosition, currentElement) => {\r\n        const currentElementCoord = currentElement.getBoundingClientRect();\r\n        const currentElementCenter = currentElementCoord.y + currentElementCoord.height / 2;\r\n        const nextElement = (cursorPosition < currentElementCenter) ?\r\n          currentElement :\r\n          currentElement.nextElementSibling;\r\n        \r\n        return nextElement;\r\n    };\r\n\r\n    const onDragOver = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        const tasksListElement = evt.target.closest(`#${idListGroup}`);\r\n        const activeElement = tasksListElement.querySelector('.selected');\r\n        const currentElement = evt.target;\r\n       \r\n        const isMoveable = (activeElement !== currentElement) &&\r\n        currentElement.classList.contains(classNameListGroupItems);\r\n\r\n        if (!isMoveable) {\r\n            return;\r\n          };\r\n\r\n        const nextElement = getNextElement(evt.clientY, currentElement);\r\n\r\n        if (\r\n            (nextElement && \r\n            (activeElement === nextElement.previousElementSibling)) ||\r\n            (activeElement === nextElement)\r\n          ) {\r\n            return;\r\n          };\r\n          \r\n          onDragAndDrop(activeElement.id, nextElement.id);\r\n    }\r\n\r\n\r\n    return (\r\n        <li className = 'list-group-item' \r\n            draggable = \"true\"\r\n            onDragStart = { onDragStart }\r\n            onDragEnd = { onDragEnd }\r\n            onDragOver = { onDragOver }>\r\n\r\n            {children}\r\n\r\n        </li>)\r\n}\r\n\r\nexport default DragAndDrop","import TodoListItem from './TodoListItem';\r\n\r\nexport default TodoListItem;\r\n","import React from 'react';\r\n\r\nimport './TodoListItem.css';\r\n\r\nconst TodoListItem = ({ \r\n    id, \r\n    className, \r\n    label, \r\n    onToggleImportant, \r\n    onToggleDone, \r\n    onDelete, \r\n    onEditItemLabel \r\n    }) => {\r\n\r\n    return (\r\n        <div className = \"todo-list-item\" >\r\n            <button \r\n                type = \"button\"\r\n                className = \"button-important\"\r\n                onClick = { onToggleImportant }>\r\n            </button>\r\n            <div \r\n                className = { className }\r\n                onClick = { onToggleDone }\r\n                id = { id }>\r\n                \r\n                { label }\r\n                \r\n            </div>\r\n            <button \r\n                type = \"button\"\r\n                onClick = { onEditItemLabel }>\r\n                edit\r\n            </button>\r\n            <button \r\n                type = \"button\"\r\n                onClick = { onDelete }>\r\n                delete\r\n            </button>  \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoListItem;\r\n","import TodoList from './TodoList';\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\n\r\nimport DragAndDrop from '../DragAndDrop';\r\nimport '../DragAndDrop/DragAndDrop.css';\r\n\r\nimport TodoListItem from '../TodoListItem';\r\nimport './TodoList.css';\r\n\r\nconst TodoList = ({ \r\n    items, \r\n    onToggleImportant, \r\n    onToggleDone, \r\n    onDelete, \r\n    onEditItemLabel, \r\n    onDragAndDrop, \r\n    }) => {\r\n        const idListGroup = 'idListGroup';\r\n\r\n        const elements = items.map((item) => {\r\n            const { id, important, done, ...itemProps } = item;\r\n\r\n            let classNamelabel = 'todo-list-item-label';\r\n            if (important) {\r\n                classNamelabel += ' important';\r\n            }\r\n            if (done) {\r\n                classNamelabel += ' done';\r\n            }\r\n\r\n            return (\r\n                <DragAndDrop \r\n                    key = { id }\r\n                    classNamelabel = { classNamelabel }\r\n                    idListGroup = { idListGroup }\r\n                    onDragAndDrop = { onDragAndDrop }>\r\n                    <TodoListItem\r\n                        {...itemProps}\r\n                        id = { id }\r\n                        className = { classNamelabel }\r\n                        onToggleImportant = { () => onToggleImportant(id) }\r\n                        onToggleDone = { () => onToggleDone(id) }\r\n                        onDelete = { () => onDelete(id) }\r\n                        onEditItemLabel = { () => onEditItemLabel(id) } />\r\n                </DragAndDrop>\r\n            );\r\n        });\r\n\r\n    return (<ul className = \"todo-list list-group\" id = { idListGroup }>{ elements }</ul>);\r\n};\r\n\r\nexport default TodoList;\r\n","import SearchPanel from './SearchPanel';\r\n\r\nexport default SearchPanel;\r\n","import React, { useState } from 'react';\r\n\r\nimport './SearchPanel.css';\r\n\r\nconst SearchPanel = ({ onSearchChange = () => {} }) => {\r\n\r\n    const initialState = { term: '' };\r\n    const [state, setState] = useState(initialState)\r\n\r\n    const onTermChange = (e) => {\r\n        setState({\r\n            term: e.target.value\r\n        });\r\n\r\n        onSearchChange(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <input \r\n            type = \"text\"\r\n            className = \"form-control search-input\"\r\n            placeholder = \"Search\"\r\n            value = { state.term }\r\n            onChange = { onTermChange } />\r\n    );\r\n}\r\n\r\nexport default SearchPanel","import React from 'react';\r\n\r\nconst filterButtons = [\r\n    { name: 'all', label: 'All' },\r\n    { name: 'active', label: 'Active' },\r\n    { name: 'done', label: 'Done' }\r\n];\r\n\r\nconst ItemStatusFilter = ({ filter, onFilterChange = () => {} }) => {\r\n\r\n    const buttons = filterButtons.map(({ name, label }) => {\r\n        const isActive = name === filter;\r\n        const classNames = 'btn ' + (isActive ? 'btn-outline-secondary' : 'btn-secondary');\r\n\r\n        return (\r\n            <button \r\n                key = {name}\r\n                type = \"button\"\r\n                onClick = { () => onFilterChange(name) }\r\n                className = { classNames }>\r\n                { label } \r\n            </button>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className = \"btn-group\">\r\n            { buttons }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ItemStatusFilter;\r\n","import ItemStatusFilter from './ItemStatusFilter';\r\n\r\nexport default ItemStatusFilter;\r\n","import ItemAddForm from './ItemAddForm';\r\n\r\nexport default ItemAddForm;\r\n","import React, { useState } from 'react';\r\n\r\nimport './ItemAddForm.css';\r\n\r\n\r\nconst ItemAddForm = ({ stateForm, onItemAdded, onSaveItemLabel, onDelete }) => {\r\n\r\n    const [stateValue, setStateValue] = useState({ label: '', edit: true });\r\n\r\n    if(!stateForm.flag && (stateValue.edit)){ setStateValue({ ...stateForm, edit: false })};\r\n\r\n    const onLabelChange = (evt) => {\r\n        setStateValue({\r\n            ...stateValue, label: evt.target.value \r\n        });\r\n    };\r\n    \r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        const { label } = stateValue;\r\n        \r\n        if(stateForm.flag) {\r\n            if(label.length > 0) {\r\n                onItemAdded(label);\r\n            }\r\n        } else {\r\n            label.length > 0 ?\r\n                onSaveItemLabel({ label, id: stateForm.id }):\r\n                onDelete(stateForm.id);\r\n        }\r\n        setStateValue({ label: '', edit: true });\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <form\r\n            className = \"bottom-panel d-flex\"\r\n            onSubmit = { onSubmit }>\r\n\r\n            <input \r\n                type = \"text\"\r\n                className = \"form-control new-todo-label\"\r\n                value = { stateValue.label }\r\n                onChange = { onLabelChange }\r\n                \r\n                placeholder = \"What needs to be done?\" />\r\n\r\n            <button \r\n                type = \"submit\"\r\n                className = \"btn btn-outline-secondary\"> { stateForm.flag ? 'Add' : 'Save' } </button>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nexport default ItemAddForm\r\n","import Loading from './Loading';\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport './Loading.css';\r\n\r\nlet Loading = ({ loading }) => (\r\n    loading ?\r\n        <div className = \"lds-css\">\r\n            <div className = \"lds-double-ring\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>:\r\n    null\r\n);\r\n\r\n\r\nconst mapStateToProps = (state) => ({ loading : state.loading })\r\n\r\nexport default connect(mapStateToProps, null)(Loading)\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './App.css';\r\n\r\nimport AppHeader from '../AppHeader';\r\nimport TodoList from '../TodoList';\r\nimport SearchPanel from '../SearchPanel';\r\nimport ItemStatusFilter from '../ItemStatusFilter';\r\nimport ItemAddForm from '../ItemAddForm';\r\nimport Loading from '../Loading';\r\n\r\nimport {  \r\n    GET_TODO,\r\n    PUT_TODO,        \r\n    SET_ITEM,  \r\n    RECEIV_FILTER,    \r\n    RECEIV_SEARCH \r\n} from '../../store/actions'; \r\n\r\n\r\nlet timeRender = 0\r\n\r\nconst App = (props) => {\r\n    const { \r\n        GET_TODO,\r\n        PUT_TODO, \r\n        SET_ITEM, \r\n        RECEIV_FILTER, \r\n        RECEIV_SEARCH,\r\n    } = props;\r\n\r\n    const state = props.state;\r\n    const { items, filter, search } =  props.state;\r\n\r\n    const [get, setGet] = useState(true);\r\n\r\n    const initialAddToSave = {label: '', flag: true};\r\n    const [stateForm, setStateForm] = useState(initialAddToSave);\r\n\r\n\r\n    const onItemAdded = (label) => {\r\n        const result = (state) => {\r\n            const item = createItem(label);\r\n            return [...state.items, item];\r\n        };\r\n        SET_ITEM(result(state));\r\n    };\r\n\r\n    const toggleProperty = (arr, id, propName) => {\r\n        const idx = arr.findIndex((item) => item.id === id);\r\n        const oldItem = arr[idx];\r\n        const value = !oldItem[propName];\r\n\r\n        const item = { ...arr[idx], [propName]: value } ;\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            item,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n    };\r\n\r\n    const onToggleDone = (id) => {\r\n        const result = (state) => {\r\n            const items = toggleProperty(state.items, id, 'done');\r\n            return items\r\n        }\r\n        SET_ITEM(result(state));\r\n    };\r\n\r\n    const onToggleImportant = (id) => {\r\n        const result = (state) => {\r\n            const items = toggleProperty(state.items, id, 'important');\r\n            return items\r\n        }\r\n        SET_ITEM(result(state));\r\n    };\r\n\r\n    const onDelete = (id) => {\r\n        const result = (state) => {\r\n            const idx = state.items.findIndex((item) => item.id === id);\r\n            const items = [\r\n              ...state.items.slice(0, idx),\r\n              ...state.items.slice(idx + 1)\r\n            ];\r\n            setStateForm(initialAddToSave);\r\n            return items\r\n        }\r\n        SET_ITEM(result(state));\r\n    };\r\n\r\n    const onFilterChange = (filter) => {\r\n        RECEIV_FILTER(filter);\r\n    };\r\n\r\n    const onSearchChange = (search) => {\r\n        RECEIV_SEARCH(search);\r\n    };\r\n\r\n    const createItem = (label) => {\r\n        return {\r\n            id : Date.now(),\r\n            label,\r\n            important : false,\r\n            done : false\r\n        };\r\n    }\r\n\r\n    const filterItems = (items, filter) => {\r\n        if (filter === 'all') {\r\n            return items;\r\n        } else if (filter === 'active') {\r\n            return items.filter((item) => (!item.done));\r\n        } else if (filter === 'done') {\r\n            return items.filter((item) => item.done);\r\n        }\r\n    };\r\n\r\n    const searchItems = (items, search) => {\r\n        if (search.length === 0) {\r\n            return items;\r\n        };\r\n\r\n        return items.filter((item) => {\r\n            return item.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\r\n        });\r\n    };\r\n\r\n    const onEditItemLabel = (id) => {\r\n        const value = items.find((item) => item.id === id ).label;\r\n        setStateForm({label: value, flag: false, id: id});\r\n    }\r\n    \r\n    const onSaveItemLabel = ({label, id}) => {\r\n        const newItems = items.slice();\r\n        const index = newItems.findIndex((item) => item.id === id );\r\n        newItems[index].label = label;\r\n        setStateForm(initialAddToSave);\r\n    };\r\n\r\n    const doneCount = items.filter((item) => item.done).length;\r\n    const toDoCount = items.length - doneCount;\r\n    const visibleItems = searchItems(filterItems(items, filter), search);\r\n    \r\n    const onDragAndDrop = (idActiveItem, idNextItem) => {\r\n        const newItems = items.slice();\r\n        const indexActiveItem = items.findIndex(item => (item.id === +idActiveItem))\r\n        const indexNextItem = items.findIndex(item => (item.id === +idNextItem))\r\n        if ((indexActiveItem !== -1) && (indexNextItem !== -1)) {\r\n        \r\n        const ActiveItem = items[indexActiveItem];\r\n        const NextItem = items[indexNextItem];\r\n        \r\n        newItems[indexActiveItem] = NextItem;\r\n        newItems[indexNextItem] = ActiveItem;\r\n        \r\n        SET_ITEM(newItems);\r\n    }};\r\n\r\n    useEffect(() => {\r\n        const time = Date.now() - timeRender;\r\n        if(state.server) {\r\n            if(time > 100) {\r\n                PUT_TODO({items: state.items});\r\n            } \r\n        } \r\n        timeRender = Date.now();\r\n    }); \r\n \r\n    if(get) {\r\n        GET_TODO();\r\n        setGet(!get);\r\n    };\r\n    \r\n    \r\n    \r\n\r\n    return (\r\n        <div className = \"todo-app\">\r\n            <AppHeader toDo = { toDoCount } done = { doneCount }/>\r\n\r\n            <div className = \"search-panel d-flex\">\r\n                <SearchPanel\r\n                    onSearchChange = { onSearchChange } />\r\n\r\n                <ItemStatusFilter\r\n                    filter = { filter }\r\n                    onFilterChange = { onFilterChange } />\r\n            </div>\r\n\r\n            <TodoList\r\n                items = { visibleItems }\r\n                onToggleImportant = { onToggleImportant }\r\n                onToggleDone = { onToggleDone }\r\n                onDelete = { onDelete } \r\n                onEditItemLabel = { onEditItemLabel }\r\n                onDragAndDrop = { onDragAndDrop } />\r\n\r\n            <ItemAddForm\r\n                stateForm = { stateForm }\r\n                onDelete = { onDelete }\r\n                onSaveItemLabel = { onSaveItemLabel }\r\n                onItemAdded = { onItemAdded } />\r\n\r\n            <Loading />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { state }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    GET_TODO,\r\n    PUT_TODO,        \r\n    SET_ITEM,  \r\n    RECEIV_FILTER,    \r\n    RECEIV_SEARCH,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","const getTodo = () => ({\r\n    type: 'GET_TODO'\r\n});\r\n\r\nconst putTodo = (state) => ({\r\n    type: 'PUT_TODO', state \r\n});\r\n\r\nconst onItemAdded = items => ({\r\n    type: 'SET_ITEM', items\r\n});\r\n\r\nconst onFilterChange = filter => ({\r\n    type: 'RECEIV_FILTER', filter\r\n});\r\n\r\nconst onSearchChange = search => ({\r\n    type: 'RECEIV_SEARCH', search\r\n});\r\n\r\n\r\nexport const GET_TODO = getTodo;\r\nexport const PUT_TODO = putTodo;\r\nexport const SET_ITEM = onItemAdded;\r\nexport const RECEIV_FILTER = onFilterChange;\r\nexport const RECEIV_SEARCH = onSearchChange;","import App from './App';\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios from \"axios\";\r\n\r\nconst urlTest = 'https://react-todo-21012021-default-rtdb.europe-west1.firebasedatabase.app/todo-list.json';\r\n\r\nexport default axios.create({\r\n    baseURL : urlTest,\r\n    responseType : \"json\"\r\n});","import { put, takeLatest, all } from \"redux-saga/effects\";\r\nimport API from '../../utils/API';\r\n\r\n\r\nfunction* fetchTodoGet() {\r\n    const response = yield API.get('/');\r\n    response.data ?\r\n        yield put({ type: \"TODO_RECEIVED\", data: { ...response.data.state }}):\r\n        yield put({ type: \"TODO_RECEIVED\", data: { }})\r\n}\r\n\r\nfunction* actionWatcherGet() {\r\n    yield takeLatest(\"GET_TODO\", fetchTodoGet);\r\n}\r\n\r\nfunction* fetchTodoPut(state) {\r\n    try {\r\n        yield API.put('/', {state: state.state});\r\n    } catch (error) {\r\n        console.log('Server is not update!', error);\r\n    }    \r\n}\r\n\r\nfunction* actionWatcherPut() {\r\n    yield takeLatest(\"PUT_TODO\", fetchTodoPut);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([ actionWatcherGet(), actionWatcherPut() ]);\r\n}\r\n\r\n","const initialState = {\r\n    items : [],\r\n    filter : 'all',\r\n    search : '',\r\n    loading : false,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"GET_TODO\":\r\n            return { ...state, loading : true };\r\n        case \"PUT_TODO\":\r\n            return state;\r\n        case \"TODO_RECEIVED\":\r\n            return { ...state, ...action.data, loading : false, server: true };\r\n        case \"SET_ITEM\":\r\n            return { ...state, items : action.items };\r\n        case \"RECEIV_FILTER\":\r\n            return { ...state, filter : action.filter };\r\n        case \"RECEIV_SEARCH\":\r\n            return { ...state, search : action.search };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n   \r\nexport default reducer;\r\n   \r\n\r\n\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga'; \r\n\r\nimport rootSaga from './sagas';\r\nimport reducer from './reducers';\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n      reducer,\r\n      applyMiddleware(sagaMiddleware)\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store = { store }>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}