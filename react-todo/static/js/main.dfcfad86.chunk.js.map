{"version":3,"sources":["components/AppHeader/index.js","components/AppHeader/AppHeader.js","components/DragAndDrop/index.js","components/DragAndDrop/DragAndDrop.js","components/TodoListItem/index.js","components/TodoListItem/TodoListItem.js","components/TodoList/index.js","components/TodoList/TodoList.js","components/SearchPanel/index.js","components/SearchPanel/SearchPanel.js","components/ItemStatusFilter/ItemStatusFilter.js","components/ItemStatusFilter/index.js","components/ItemAddForm/index.js","components/ItemAddForm/ItemAddForm.js","components/Loading/index.js","components/Loading/Loading.js","components/App/App.js","store/actions/index.js","components/App/index.js","reportWebVitals.js","utils/API.js","store/sagas/index.js","store/reducers/index.js","store/index.js","index.js"],"names":["AppHeader","toDo","done","className","DragAndDrop","classNames","idListGroup","children","changeValueItem","classNameListGroupItems","split","draggable","onDragStart","evt","target","classList","add","onDragEnd","remove","onDragOver","preventDefault","tasksListElement","closest","activeElement","querySelector","currentElement","contains","nextElement","cursorPosition","currentElementCoord","getBoundingClientRect","y","height","nextElementSibling","getNextElement","clientY","previousElementSibling","insertBefore","onDoubleClick","TodoListItem","label","onToggleImportant","onToggleDone","onDelete","onClick","type","TodoList","items","elements","map","item","id","important","itemProps","SearchPanel","onSearchChange","useState","term","state","setState","placeholder","value","onChange","e","filterButtons","name","ItemStatusFilter","filter","onFilterChange","buttons","ItemAddForm","onItemAdded","onSubmit","cb","length","Loading","connect","loading","mapDispatchToProps","GET_TODO","PUT_TODO","SET_ITEM","RECEIV_FILTER","RECEIV_SEARCH","search","App","props","get","setGet","toggleProperty","arr","propName","idx","findIndex","slice","createItem","Date","now","doneCount","toDoCount","visibleItems","toLowerCase","indexOf","searchItems","filterItems","useEffect","server","result","input","document","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","axios","create","baseURL","responseType","fetchTodoGet","actionWatcherGet","fetchTodoPut","actionWatcherPut","rootSaga","API","response","put","data","alert","console","log","takeLatest","all","initialState","reducer","action","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dfcfad86.chunk.js","sourcesContent":["import AppHeader from './AppHeader';\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\nimport './AppHeader.css';\r\n\r\nconst AppHeader = ({ toDo, done }) => {\r\n\r\n    return (\r\n        <div className = \"app-header d-flex\">\r\n            <h1> ToDo List </h1>\r\n            <h2> { toDo } more to do, { done } done </h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;\r\n","import DragAndDrop from './DragAndDrop';\r\n\r\nexport default DragAndDrop;\r\n","const DragAndDrop = ({ classNames, idListGroup, children, changeValueItem }) => {\r\n\r\n    const classNameListGroupItems = classNames.split(' ')[0];\r\n\r\n    const onDragStart = (evt) => {\r\n        evt.target.classList.add('selected');\r\n    };\r\n\r\n    const onDragEnd = (evt) => {\r\n        evt.target.classList.remove('selected');\r\n    };\r\n\r\n    const getNextElement = (cursorPosition, currentElement) => {\r\n        const currentElementCoord = currentElement.getBoundingClientRect();\r\n        const currentElementCenter = currentElementCoord.y + currentElementCoord.height / 2;\r\n        \r\n        const nextElement = (cursorPosition < currentElementCenter) ?\r\n          currentElement :\r\n          currentElement.nextElementSibling;\r\n        \r\n        return nextElement;\r\n    };\r\n\r\n    const onDragOver = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        const tasksListElement = evt.target.closest(`#${idListGroup}`);\r\n        const activeElement = tasksListElement.querySelector('.selected');\r\n        const currentElement = evt.target;\r\n\r\n        const isMoveable = (activeElement !== currentElement) &&\r\n        currentElement.classList.contains(classNameListGroupItems);\r\n\r\n        if (!isMoveable) {\r\n            return;\r\n          };\r\n\r\n        const nextElement = getNextElement(evt.clientY, currentElement);\r\n\r\n        if (\r\n            (nextElement && \r\n            (activeElement === nextElement.previousElementSibling)) ||\r\n            (activeElement === nextElement)\r\n          ) {\r\n            return;\r\n          };\r\n\r\n        tasksListElement.insertBefore(activeElement, nextElement);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <li className = { classNames } \r\n            draggable = \"true\"\r\n            onDragStart = { onDragStart }\r\n            onDragEnd = { onDragEnd }\r\n            onDragOver = { onDragOver }\r\n            onDoubleClick = { changeValueItem }>\r\n\r\n            {children}\r\n\r\n        </li>)\r\n}\r\n\r\nexport default DragAndDrop","import TodoListItem from './TodoListItem';\r\n\r\nexport default TodoListItem;\r\n","import React from 'react';\r\n\r\nimport './TodoListItem.css';\r\n\r\nconst TodoListItem = ({ label, onToggleImportant, onToggleDone, onDelete }) => {\r\n\r\n    return (\r\n        <span className = \"todo-list-item\" >\r\n            <span\r\n                className = \"todo-list-item-label\"\r\n                onClick = { onToggleDone }>{ label }\r\n            </span>\r\n\r\n            <button \r\n                type = \"button\"\r\n                className = \"btn btn-outline-danger btn-sm float-right \"\r\n                onClick = { onDelete }>\r\n                delete\r\n            </button>\r\n\r\n            <button \r\n                type = \"button\"\r\n                className = \"btn btn-outline-success btn-sm float-left\"\r\n                onClick = { onToggleImportant }>\r\n                !\r\n            </button>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default TodoListItem;\r\n","import TodoList from './TodoList';\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\n\r\nimport DragAndDrop from '../DragAndDrop';\r\nimport '../DragAndDrop/DragAndDrop.css';\r\n\r\nimport TodoListItem from '../TodoListItem';\r\nimport './TodoList.css';\r\n\r\nconst TodoList = ({ items, onToggleImportant, onToggleDone, onDelete, changeValueItem }) => {\r\n\r\n    const idListGroup = 'idListGroup';\r\n\r\n    const elements = items.map((item) => {\r\n        const { id, important, done, ...itemProps } = item;\r\n\r\n        let classNames = 'list-group-item';\r\n        if (important) {\r\n          classNames += ' important';\r\n        }\r\n      \r\n        if (done) {\r\n          classNames += ' done';\r\n        }\r\n\r\n        return (\r\n            <DragAndDrop \r\n                key = { id } \r\n                classNames = { classNames } \r\n                idListGroup = { idListGroup }\r\n                changeValueItem = { () => changeValueItem(id) }>\r\n                <TodoListItem\r\n                    { ...itemProps }\r\n                    onToggleImportant = { () => onToggleImportant(id) }\r\n                    onToggleDone = { () => onToggleDone(id) }\r\n                    onDelete = { () => onDelete(id) } />\r\n            </DragAndDrop>\r\n        );\r\n    });\r\n\r\n    return (<ul className = \"todo-list list-group\" id = { idListGroup }>{ elements }</ul>);\r\n};\r\n\r\nexport default TodoList;\r\n","import SearchPanel from './SearchPanel';\r\n\r\nexport default SearchPanel;\r\n","import React, { useState } from 'react';\r\n\r\nimport './SearchPanel.css';\r\n\r\nconst SearchPanel = ({ onSearchChange = () => {} }) => {\r\n\r\n    const initialState = { term: '' };\r\n    const [state, setState] = useState(initialState)\r\n\r\n    const onTermChange = (e) => {\r\n        setState({\r\n            term: e.target.value\r\n        });\r\n\r\n        onSearchChange(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <input \r\n            type = \"text\"\r\n            className = \"form-control search-input\"\r\n            placeholder = \"Search\"\r\n            value = { state.term }\r\n            onChange = { onTermChange } />\r\n    );\r\n}\r\n\r\nexport default SearchPanel","import React from 'react';\r\n\r\nconst filterButtons = [\r\n    { name: 'all', label: 'All' },\r\n    { name: 'active', label: 'Active' },\r\n    { name: 'done', label: 'Done' }\r\n];\r\n\r\nconst ItemStatusFilter = ({ filter, onFilterChange = () => {} }) => {\r\n\r\n    const buttons = filterButtons.map(({ name, label }) => {\r\n        const isActive = name === filter;\r\n        const classNames = 'btn ' + (isActive ? 'btn-outline-secondary' : 'btn-secondary');\r\n\r\n        return (\r\n            <button \r\n                key = {name}\r\n                type = \"button\"\r\n                onClick = { () => onFilterChange(name) }\r\n                className = { classNames }>\r\n                { label } \r\n            </button>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className = \"btn-group\">\r\n            { buttons }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ItemStatusFilter;\r\n","import ItemStatusFilter from './ItemStatusFilter';\r\n\r\nexport default ItemStatusFilter;\r\n","import ItemAddForm from './ItemAddForm';\r\n\r\nexport default ItemAddForm;\r\n","import React, { useState } from 'react';\r\n\r\nimport './ItemAddForm.css';\r\n\r\nconst ItemAddForm = ({ onItemAdded }) => {\r\n\r\n    const initialState = { label: '' };\r\n    const [state, setState] = useState(initialState)\r\n    \r\n    const onLabelChange = (evt) => {\r\n        setState({\r\n            label: evt.target.value\r\n        })\r\n    };\r\n\r\n    const onSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        const { label } = state;\r\n        setState({ label: '' });\r\n        const cb = onItemAdded || (() => {});\r\n        if(label.length > 0) {\r\n            cb(label);\r\n        };\r\n    };\r\n\r\n    return (\r\n        <form\r\n            className = \"bottom-panel d-flex\"\r\n            onSubmit = { onSubmit }>\r\n\r\n            <input \r\n                type = \"text\"\r\n                className = \"form-control new-todo-label\"\r\n                value = { state.label }\r\n                onChange = { onLabelChange }\r\n                placeholder = \"What needs to be done?\" />\r\n\r\n            <button \r\n                type = \"submit\"\r\n                className = \"btn btn-outline-secondary\"> Add </button>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nexport default ItemAddForm\r\n","import Loading from './Loading';\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport './Loading.css';\r\n\r\nlet Loading = ({ loading }) => (\r\n    loading ?\r\n        <div className = \"lds-css\">\r\n            <div className = \"lds-double-ring\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>:\r\n    null\r\n);\r\n\r\n\r\nconst mapStateToProps = (state) => ({ loading : state.loading })\r\n\r\nexport default connect(mapStateToProps, null)(Loading)\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './App.css';\r\n\r\nimport AppHeader from '../AppHeader';\r\nimport TodoList from '../TodoList';\r\nimport SearchPanel from '../SearchPanel';\r\nimport ItemStatusFilter from '../ItemStatusFilter';\r\nimport ItemAddForm from '../ItemAddForm';\r\nimport Loading from '../Loading';\r\n\r\nimport {  \r\n    GET_TODO,\r\n    PUT_TODO,        \r\n    SET_ITEM,  \r\n    RECEIV_FILTER,    \r\n    RECEIV_SEARCH \r\n} from '../../store/actions'; \r\n\r\n\r\nconst App = (props) => {\r\n    const { \r\n        GET_TODO,\r\n        PUT_TODO, \r\n        SET_ITEM, \r\n        RECEIV_FILTER, \r\n        RECEIV_SEARCH,\r\n    } = props;\r\n\r\n    const state = props.state;\r\n    const { items, filter, search } =  props.state;\r\n\r\n    const [get, setGet] = useState(true)\r\n\r\n    const onItemAdded = (label) => {\r\n        const result = (state) => {\r\n            const item = createItem(label);\r\n            return [...state.items, item];\r\n        };\r\n        SET_ITEM(result(state));\r\n    };\r\n\r\n    const toggleProperty = (arr, id, propName) => {\r\n        const idx = arr.findIndex((item) => item.id === id);\r\n        const oldItem = arr[idx];\r\n        const value = !oldItem[propName];\r\n\r\n        const item = { ...arr[idx], [propName]: value } ;\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            item,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n    };\r\n\r\n    const onToggleDone = (id) => {\r\n        const result = (state) => {\r\n            const items = toggleProperty(state.items, id, 'done');\r\n            return items\r\n        }\r\n        SET_ITEM(result(state));\r\n    };\r\n\r\n    const onToggleImportant = (id) => {\r\n        const result = (state) => {\r\n            const items = toggleProperty(state.items, id, 'important');\r\n            return items\r\n        }\r\n        SET_ITEM(result(state));\r\n    };\r\n\r\n    const onDelete = (id) => {\r\n        const result = (state) => {\r\n            const idx = state.items.findIndex((item) => item.id === id);\r\n            const items = [\r\n              ...state.items.slice(0, idx),\r\n              ...state.items.slice(idx + 1)\r\n            ];\r\n            return items\r\n        }\r\n        SET_ITEM(result(state));\r\n    };\r\n\r\n    const onFilterChange = (filter) => {\r\n        RECEIV_FILTER(filter);\r\n    };\r\n\r\n    const onSearchChange = (search) => {\r\n        RECEIV_SEARCH(search);\r\n    };\r\n\r\n    const createItem = (label) => {\r\n        return {\r\n            id : Date.now(),\r\n            label,\r\n            important : false,\r\n            done : false\r\n        };\r\n    }\r\n\r\n    const filterItems = (items, filter) => {\r\n        if (filter === 'all') {\r\n            return items;\r\n        } else if (filter === 'active') {\r\n            return items.filter((item) => (!item.done));\r\n        } else if (filter === 'done') {\r\n            return items.filter((item) => item.done);\r\n        }\r\n    };\r\n\r\n    const searchItems = (items, search) => {\r\n        if (search.length === 0) {\r\n            return items;\r\n        };\r\n\r\n        return items.filter((item) => {\r\n            return item.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\r\n        });\r\n    };\r\n\r\n    const changeValueItem = (id) => {\r\n        const input = document.querySelector('.new-todo-label');\r\n        const value = items.find((item) => item.id === id ).label;\r\n        input.value = value;\r\n    }\r\n\r\n    const doneCount = items.filter((item) => item.done).length;\r\n    const toDoCount = items.length - doneCount;\r\n    const visibleItems = searchItems(filterItems(items, filter), search);\r\n    \r\n    useEffect(() => {\r\n        if(state.server) {\r\n            PUT_TODO(state)\r\n        }   \r\n    }); \r\n \r\n    if(get) {\r\n        GET_TODO();\r\n        setGet(!get);\r\n    };\r\n\r\n    return (\r\n        <div className = \"todo-app\">\r\n            <AppHeader toDo = { toDoCount } done = { doneCount }/>\r\n\r\n            <div className = \"search-panel d-flex\">\r\n                <SearchPanel\r\n                    onSearchChange = { onSearchChange }/>\r\n\r\n                <ItemStatusFilter\r\n                    filter = { filter }\r\n                    onFilterChange = { onFilterChange } />\r\n            </div>\r\n\r\n            <TodoList\r\n                items = { visibleItems }\r\n                onToggleImportant = { onToggleImportant }\r\n                onToggleDone = { onToggleDone }\r\n                onDelete = { onDelete } \r\n                changeValueItem = { changeValueItem } />\r\n\r\n            <ItemAddForm\r\n                onItemAdded = { onItemAdded } />\r\n\r\n            <Loading />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { state }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    GET_TODO,\r\n    PUT_TODO,        \r\n    SET_ITEM,  \r\n    RECEIV_FILTER,    \r\n    RECEIV_SEARCH,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","const getTodo = () => ({\r\n    type: 'GET_TODO'\r\n});\r\n\r\nconst putTodo = (state) => ({\r\n    type: 'PUT_TODO', state \r\n});\r\n\r\nconst onItemAdded = items => ({\r\n    type: 'SET_ITEM', items\r\n});\r\n\r\nconst onFilterChange = filter => ({\r\n    type: 'RECEIV_FILTER', filter\r\n});\r\n\r\nconst onSearchChange = search => ({\r\n    type: 'RECEIV_SEARCH', search\r\n});\r\n\r\n\r\nexport const GET_TODO = getTodo;\r\nexport const PUT_TODO = putTodo;\r\nexport const SET_ITEM = onItemAdded;\r\nexport const RECEIV_FILTER = onFilterChange;\r\nexport const RECEIV_SEARCH = onSearchChange;","import App from './App';\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios from \"axios\";\r\n\r\nconst urlTest = 'https://react-todo-21012021-default-rtdb.europe-west1.firebasedatabase.app/todo-list.json';\r\n\r\nexport default axios.create({\r\n    baseURL : urlTest,\r\n    responseType : \"json\"\r\n});","import { put, takeLatest, all } from \"redux-saga/effects\";\r\nimport API from '../../utils/API';\r\n\r\n\r\nfunction* fetchTodoGet() {\r\n    try {\r\n        const response = yield API.get('/');\r\n        yield put({ type: \"TODO_RECEIVED\", data: { ...response.data.state }});\r\n    } catch (error) {\r\n        alert('Server is not available! Please update page :)');\r\n        console.log('Server is not available!', error);\r\n    }\r\n}\r\n\r\nfunction* actionWatcherGet() {\r\n    yield takeLatest(\"GET_TODO\", fetchTodoGet);\r\n}\r\n\r\nfunction* fetchTodoPut(state) {\r\n    try {\r\n        yield API.put('/', {state: state.state});\r\n    } catch (error) {\r\n        console.log('Server is not update!', error);\r\n    }    \r\n}\r\n\r\nfunction* actionWatcherPut() {\r\n    yield takeLatest(\"PUT_TODO\", fetchTodoPut);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([ actionWatcherGet(), actionWatcherPut() ]);\r\n}\r\n\r\n","const initialState = {\r\n    items : [],\r\n    filter : 'all',\r\n    search : '',\r\n    loading : false,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"GET_TODO\":\r\n            return { ...state, loading : true };\r\n        case \"PUT_TODO\":\r\n            return state;\r\n        case \"TODO_RECEIVED\":\r\n            return { ...state, ...action.data, loading : false, server: true };\r\n        case \"SET_ITEM\":\r\n            return { ...state, items : action.items };\r\n        case \"RECEIV_FILTER\":\r\n            return { ...state, filter : action.filter };\r\n        case \"RECEIV_SEARCH\":\r\n            return { ...state, search : action.search };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n   \r\nexport default reducer;\r\n   \r\n\r\n\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga'; \r\n\r\nimport rootSaga from './sagas';\r\nimport reducer from './reducers';\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n/*const enhancerReduxDevTools = ((typeof window === 'object') && (typeof window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ !== 'undefined')) ?\r\nwindow.__REDUX_DEVTOOLS_EXTENSION__(): () => {}\r\n\r\nconst enhancer = compose(\r\n      applyMiddleware(sagaMiddleware),\r\n      enhancerReduxDevTools\r\n      )\r\n*/\r\nconst store = createStore(\r\n      reducer,\r\n      applyMiddleware(sagaMiddleware)\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store = { store }>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}